upstream backend
{
    server application_backend:9000;
    keepalive 32;
}

upstream client
{
    server application_client:4200;
    keepalive 32;
}

log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

open_file_cache max=200000 inactive=20s;
open_file_cache_valid 30s;
open_file_cache_min_uses 2;
open_file_cache_errors on;
tcp_nopush on;
tcp_nodelay on;
gzip on;
gzip_min_length 10240;
gzip_comp_level 1;
gzip_vary on;
gzip_disable msie6;
gzip_proxied expired no-cache no-store private auth;
gzip_types
    # text/html is always compressed by HttpGzipModule
    text/css
    text/javascript
    text/xml
    text/plain
    text/x-component
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/rss+xml
    application/atom+xml
    font/truetype
    font/opentype
    application/vnd.ms-fontobject
    image/svg+xml;

reset_timedout_connection on;
client_body_timeout 20;
send_timeout 7;
client_body_buffer_size  128k;
large_client_header_buffers 4 256k;
client_max_body_size 64M;

server {
    server_name application.localhost;

    location / {
        proxy_pass http://client;
    }
}

server {
    server_name api.application.localhost;
    set_by_lua $public_root 'return os.getenv("PUBLIC_ROOT") or "/app/public"';
    set_by_lua $service_name 'return os.getenv("CURRENT_SERVICE") or "application"';
    root $public_root;

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass backend;
        resolver local=on;

        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_buffers 128 16k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_intercept_errors on;
        fastcgi_ignore_client_abort off;
        fastcgi_connect_timeout 9s;
        fastcgi_buffer_size 128k;
        reset_timedout_connection on;

        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    # URL for health checks
    location /nginx-health {
      access_log off;
      default_type text/plain;
      return 200 "healthy\n";
    }


    error_log /var/log/nginx/nginx_error.log crit;
    access_log /var/log/nginx/nginx_access.log main buffer=16k;
}
